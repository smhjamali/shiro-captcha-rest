; this is an INI file
[main]

listener = org.apache.shiro.config.event.LoggingBeanEventListener
shiro.loginUrl = faces/login.xhtml
shiro.postOnlyLogout = true
# We need to set the cipherKey, if you want the rememberMe cookie to work after restarting or on multiple nodes.
# YOU MUST SET THIS TO A UNIQUE STRING
securityManager.rememberMeManager.cipherKey = kPH+bIxk5D2deZiIxcaaaA==

hashService = org.apache.shiro.crypto.hash.DefaultHashService
hashService.hashIterations = 500000
hashService.hashAlgorithmName = SHA-512
hashService.generatePublicSalt = true
# privateSalt needs to be base64-encoded in shiro.ini but not in the Java code
hashService.privateSalt = yS18L4sXpgops1PsTK2kA83U8aJLlOqo
passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher
passwordService = org.apache.shiro.authc.credential.DefaultPasswordService
passwordService.hashService = $hashService
passwordMatcher.passwordService = $passwordService

securityManager.sessionMode=native
sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
sessionManager.globalSessionTimeout = 1800000
sessionDAO = org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO
sessionManager.sessionDAO = $sessionDAO
# Session Validation
sessionValidationScheduler = org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler
# Default is 3,600,000 millis = 1 hour:
sessionValidationScheduler.interval = 3600000
sessionManager.sessionValidationScheduler = $sessionValidationScheduler
sessionManager.sessionValidationSchedulerEnabled = true
sessionManager.deleteInvalidSessions = true
securityManager.sessionManager = $sessionManager

# JNDI Datasource
ds = org.apache.shiro.jndi.JndiObjectFactory   
ds.requiredType = javax.sql.DataSource   
ds.resourceName = java:/jdbc/orderhandler
# JDBC realm config  
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm  
jdbcRealm.permissionsLookupEnabled = false 
jdbcRealm.dataSource = $ds
jdbcRealm.authenticationQuery = "SELECT password FROM tbl_user WHERE username = ?"
;jdbcRealm.userRolesQuery = "SELECT role_name FROM user_roles WHERE user_name = ?"
;jdbcRealm.permissionsQuery = "SELECT permission FROM roles_permissions WHERE role_name = ?"
jdbcRealm.credentialsMatcher = $passwordMatcher

securityManager.realms=$jdbcRealm

[urls]
/guest/** = anon
/user/** = authc